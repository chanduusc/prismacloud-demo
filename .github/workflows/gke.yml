on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
name: GKE - Build, Scan and Deploy
jobs:
  deploy:
    name: GKE - Build, Scan and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: 'Set up Google Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }} 
    - run: |-
        gcloud --quiet auth configure-docker
      # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
    - name: Checkout repo
      uses: actions/checkout@v2
    # - name: Run Bridgecrew 
    #   id: Bridgecrew
    #   uses: bridgecrewio/bridgecrew-action@master 
    #   env:
    #     PRISMA_API_URL: https://api2.prismacloud.io
    #   with:
    #     api-key: ${{ secrets.BC_API_KEY }}
    #     soft_fail: false
    # - name: Expose report
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: SARIF results
    #     path: results.sarif 
      # Build the Docker image
    - name: Build
      run: |-
        docker build --tag "gcr.io/${{ secrets.GKE_PROJECT }}/${{ secrets.IMAGE }}:${{ github.sha }}" .
    - name: Prisma Cloud image scan
      id: scan
      uses: PaloAltoNetworks/prisma-cloud-scan@v1
      with:
        pcc_console_url: ${{ secrets.PCC_CONSOLE_URL }}
        pcc_user: ${{ secrets.PCC_USER }}
        pcc_pass: ${{ secrets.PCC_PASS }}
        image_name: gcr.io/${{ secrets.GKE_PROJECT }}/${{ secrets.IMAGE }}:${{ github.sha }}  
  # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/${{ secrets.GKE_PROJECT }}/${{ secrets.IMAGE }}:${{ github.sha }}"
    - name: Set up GKE credentials
      run: |-
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --zone ${{ secrets.GKE_ZONE }} 
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    - name: Update deploy image to GKE
      run: |-
       ./kustomize edit set image "us.gcr.io/${{ secrets.GKE_PROJECT }}//${{ secrets.IMAGE }}:${{ github.sha }}"
        cat kustomization.yaml
        kustomize build . | kubectl apply -f -
        kubectl get pods -o wide
    