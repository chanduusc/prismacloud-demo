on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
    - 'lambda/AWS-Vulnerable-Lambda/**'
  pull_request:
    branches: [ main ]
    paths:
    - 'lambda/AWS-Vulnerable-Lambda/**'
name: AWS Lambda - Build, Scan and Deploy

jobs:
  build:
    defaults:
      run:
        working-directory: lambda/AWS-Vulnerable-Lambda
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2

    

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
          python-version: ${{ matrix.python-version }}

    - name: Setting up AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Create virtual env
      run: |
        pip install virtualenv zappa
        python -m virtualenv env
      
    - name: Install Requirements
      run: |
        . env/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        deactivate
        
    - name: Run Prisma Cloud Code Security 
      id: Bridgecrew
      uses: bridgecrewio/bridgecrew-action@master 
      env:
        PRISMA_API_URL: https://api2.prismacloud.io
        # LOG_LEVEL: DEBUG 
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_REF: ${{ github.ref }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_SERVER_URL: $GITHUB_SERVER_URL 
      with:
        api-key: ${{ secrets.BC_API_KEY }}
        soft_fail: true
        # download_external_modules: true

    - name: Update Django application using zappa
      run: |
        set -x
        . env/bin/activate
        zappa undeploy dev -y
        zappa deploy dev
